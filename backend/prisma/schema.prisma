generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  email         String   @unique
  password      String
  name          String?
  birthDate     DateTime?
  birthTime     String?     // HH:mm
  birthPlace    String?
  charts        Chart[]
  connections   Connection[] @relation("UserConnections")
  matches       DatingMatch[] @relation("UserMatches")
  subscription  Subscription?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Chart {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  type      String   // natal, transit, synastry, composite
  data      Json
  createdAt DateTime @default(now())
}

model Connection {
  id          String   @id @default(cuid())
  owner       User     @relation("UserConnections", fields: [ownerId], references: [id])
  ownerId     String
  targetName  String
  targetData  Json     // дата/время рождения другого человека
  synastry    Json?
  composite   Json?
  createdAt   DateTime @default(now())
}

model DatingMatch {
  id          String   @id @default(cuid())
  user        User     @relation("UserMatches", fields: [userId], references: [id])
  userId      String
  partnerId   String
  compatibility Int
  details     Json?
  status      String   // pending, accepted, rejected
  createdAt   DateTime @default(now())
}

model Subscription {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  level     String   // Free, AstraPlus, DatingPremium, MAX
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}