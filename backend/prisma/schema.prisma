generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  name          String?
  birthDate     DateTime?
  birthTime     String?
  birthPlace    String?
  role          String   @default("user")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  charts        Chart[]
  connections   Connection[]
  matches       DatingMatch[]
  subscription  Subscription?
}

model Chart {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  data      Json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Connection {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  targetName  String
  targetData  Json
  createdAt   DateTime @default(now())
}

model DatingMatch {
  id            Int      @id @default(autoincrement())
  userId        Int
  user          User     @relation(fields: [userId], references: [id])
  candidateData Json
  compatibility Int
  liked         Boolean  @default(false)
  rejected      Boolean  @default(false)
  createdAt     DateTime @default(now())
}

model Subscription {
  id        Int       @id @default(autoincrement())
  userId    Int       @unique
  user      User      @relation(fields: [userId], references: [id])
  tier      String    @default("free")
  startedAt DateTime  @default(now())
  expiresAt DateTime?
}